// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFunctionModuleBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView moduleCard;

  @NonNull
  public final TextView moduleDescription;

  @NonNull
  public final ImageView moduleIcon;

  @NonNull
  public final TextView moduleName;

  private ItemFunctionModuleBinding(@NonNull CardView rootView, @NonNull CardView moduleCard,
      @NonNull TextView moduleDescription, @NonNull ImageView moduleIcon,
      @NonNull TextView moduleName) {
    this.rootView = rootView;
    this.moduleCard = moduleCard;
    this.moduleDescription = moduleDescription;
    this.moduleIcon = moduleIcon;
    this.moduleName = moduleName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFunctionModuleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFunctionModuleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_function_module, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFunctionModuleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView moduleCard = (CardView) rootView;

      id = R.id.module_description;
      TextView moduleDescription = ViewBindings.findChildViewById(rootView, id);
      if (moduleDescription == null) {
        break missingId;
      }

      id = R.id.module_icon;
      ImageView moduleIcon = ViewBindings.findChildViewById(rootView, id);
      if (moduleIcon == null) {
        break missingId;
      }

      id = R.id.module_name;
      TextView moduleName = ViewBindings.findChildViewById(rootView, id);
      if (moduleName == null) {
        break missingId;
      }

      return new ItemFunctionModuleBinding((CardView) rootView, moduleCard, moduleDescription,
          moduleIcon, moduleName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
